{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","resetGoodsList","reverseGoodsList","this","isApdated","listOfGoods","goods","visibleGoods","sort","prevGood","nextGood","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,eAAiB,WACf,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAjBlB,EAqBES,iBAAmB,WACjB,EAAKL,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAtBjD,4CAyBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAyB,SAAbV,GAAuBD,EACnCY,EA9DH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENc,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQhB,GACN,IAAK,OASL,QACE,OAAO,EAPT,IAAK,WACH,OAAOe,EAASE,cAAcD,GAEhC,IAAK,SACH,OAAOD,EAASG,OAASF,EAASE,WAOpCnB,GACFc,EAAaM,UAGRN,EAoCeO,CAClBxB,EACA,CAAEG,aAAYC,aAGhB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAASd,KAAKP,eAHhB,iCAQA,wBACEoB,KAAK,SACLD,UAAU,6BACVE,QAASd,KAAKJ,aAHhB,4BAQA,wBACEiB,KAAK,SACLD,UAAU,6BACVE,QAASd,KAAKD,iBAHhB,qBAQEE,GACA,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAASd,KAAKF,eAHhB,sBAUJ,6BACGI,EAAYa,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAzEpC,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.46eaba34.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, nextGood) => {\n    switch (sortType) {\n      case 'none':\n        return 0;\n\n      case 'alphabet':\n        return prevGood.localeCompare(nextGood);\n\n      case 'length':\n        return prevGood.length - nextGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetGoodsList = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverseGoodsList = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const isApdated = sortType !== 'none' || isReversed;\n    const listOfGoods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={this.reverseGoodsList}\n          >\n            Reverse\n          </button>\n\n          { isApdated && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetGoodsList}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {listOfGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}